<?php
function tagsummary_menu($cache) {
  $items = array();
  if ($cache) {
    $items[] = array('path' => 'flickr', 'title' => t('Flickr Tag Summary'), 'access' => 1, 'callback' => 'tagsummary_page');
  }
  else {
  }
  return $items;
}
function tagsummary_page() {
  $output = theme('box', t('Flickr Tag Summary'), t('Enter a tag and a user name, and you\'ll get some html code to copy to your blog or whereever'));
  $output .= drupal_get_form('tagsummary_form');
  return $output;
}
function tagsummary_form($form_values = NULL) {
 $form = array();
  // Setting #multistep to true activates some special form
  // handling code for Drupal. First, the FormAPI makes sure
  // that the results of the form's submission are passed back
  // into the builder function when the page loads for the second
  // time. That gives it a chance to build a different version of
  // the form (with additional options, for example). It also
  // does magickal voodoo that keeps validation working properly
  // in those complex multi-page forms. For now, we won't
  // worry about that.
  
  $form['#multistep'] = TRUE;
 
  // Setting #redirect to false means that Drupal *won't* attempt
  // to reload a clean copy of the form (by redirecting to the
  // current page, and reloading) when it's submitted. In a multistep
  // form, we want to keep the data around so it can be displayed,
  // or passed on to a subsequent step.
  
  $form['#redirect'] = FALSE;
  // Remember: in a #multistep form, Drupal makes sure that the
  // $form_values array is passed into this builder function once
  // you submit the form. That gives us a chance to display different
  // form fields based on what was previously submitted.
  
  $form['search'] = array('#type' => 'fieldset');
  $form['search']['tag'] = array('#type' => 'textfield', '#title' => t('Tags'), '#description' => t('Comma seperated'));
  $form['search']['user'] = array('#type' => 'textfield', '#title' => t('Flickr User'), '#required' => true);
  $form['search']['num'] = array('#type' => 'textfield', '#size' => 3, '#title' => t('Number of thumbnails'), '#default_value' => '10');
  $form['search']['get'] = array('#type' => 'submit', '#value' => t('Get'));
  
  if ($form_values === NULL) {
  }
  else {
   $flickr = flickrrippr_phpflickr();
   $fuser = $flickr->people_findByUsername($form_values['user']);
   if (!$fuser) {
 	drupal_set_message(t('%username not found on flickr', array('%username' => $form_values['user'])));
	return $form;
   } 
  

   $photos = $flickr->photos_search(
                                    array(
                                           'per_page' => ($form_values['num'] <= 500 ? $form_values['num'] : 500),
					   'user_id' => $fuser['id'],
                                           'page' => 1,
					   'tags' => $form_values['tag'] 
                                         )
                                  );
    $thumbs = flickrrippr_thumbnail_table($photos, $photoslist, false);
    $form['copythis'] = array('#type' => 'textarea', '#value' => $thumbs);
    $form['results'] = array('#type' => 'markup', '#value' => $thumbs);

  }
  return $form;
}
