<?php

/**
 * Implementation of hook_perm().
 */
function flickrgeo_perm() {
  return array('view flickr timeline');
}

/**
 * Implementation of hook_menu().
 */
function flickrgeo_menu() {
  $items['flickrtimeline'] = array(
    'page callback' => 'flickrgeo_timeline',
    'access arguments' => array('view flickr timeline'),
    'type' => MENU_NORMAL_ITEM,
    'title' => 'Flickr Photos Timeline',
  );
  return $items;
}

function flickrgeo_nodeapi(&$node, $op) {
  if ($node->type != 'flickrrippr_photo') {
    return;
  }
  switch($op) {
    case 'view':
      flickrgeo_view($node);
    case 'update':
    case 'insert':
      flickrgeo_save($node);
    break;
  }
}
function flickrgeo_view(&$node) {
  $cached = flickrgeo_get_geo($node->flickr_photo['flickrphoto_id']);
  if (!$cached) {
    return;
  }
  $map = array_merge(gmap_defaults());
  $map['latlong'] = ceil($cached->latitude) .','. ceil($cached->longitude);
  $map['zoom'] = 8;
  $map['markermode'] = 1;
//   $mode = $usermap['markermode'];
  
//   $map['rmtcallback'] = url('map/user/load');
//   $map['markermode'] = $usermap['markermode'];

  $newmarker['latitude'] = $cached->latitude;
  $newmarker['longitude'] = $cached->longitude;
  $newmarker['markername'] = 'drupal';
  $newmarker['opts']['title'] = check_plain($node->title);
  $map['markers'][] = $newmarker;
  
  $node->content['flickrmap'] = array(
    '#value' => '<div class="flickrmap">'. theme('gmap',  array('#settings' => $map, '#type'=> 'gmap')) .'</div>',
    '#weight' => -4,
  );
}

function flickrgeo_save($node) {
  $photo_id = $node->flickr_photo['flickrphoto_id'];
  $geo = flickrgeo_fetch_geo_from_flickr($photo_id);
//     drupal_set_message(print_r($geo, 1));

  if (!$geo) {
    return;
  }
  $record->flickrphoto_id = $photo_id;
  $record->nid = $node->nid;
  foreach(array('latitude', 'longitude', 'accuracy') as $key) {
    $record->$key = $geo['location'][$key];
  }
/*      'longitude' => array('type' => 'float', 'not null' => TRUE),
      'accuracy' => array('type' => 'int', 'not null' => TRUE),
      'context' => array('type' => 'text'),
      'locality_content' => array('type' => 'text'),
      'locality_place_id' => array('type' => 'text'),
      'locality_woeid' => array('type' => 'text'),
      'county_content' => array('type' => 'text'),
      'county_place_id' => array('type' => 'text'),
      'county_woeid' => array('type' => 'text'),
      'region_content' => array('type' => 'text'),
      'region_place_id' => array('type' => 'text'),
      'region_woeid' => array('type' => 'text'),
      'country_content' => array('type' => 'text'),
      'country_place_id' => array('type' => 'text'),
      'country_woeid' => array('type' => 'text'), 
      'place_id' => array('type' => 'text'),
      'woeid' => array('type' => 'text'),*/
//           drupal_set_message(print_r($record, 1));

  $cached = flickrgeo_get_geo($photo_id);
  if ($cached) {
      drupal_write_record('flickrgeo', $record, array('nid', 'flickrphoto_id'));
  }
  else {
    drupal_write_record('flickrgeo', $record);
  }
}

function flickrgeo_get_geo($photo_id) {
  return db_fetch_object(db_query("SELECT * FROM {flickrgeo} WHERE flickrphoto_id=%d", $photo_id));
}

/**
 * Get the geo info for a public photo on flickr
 */
function flickrgeo_fetch_geo_from_flickr($photo_id) {
  $flickr = flickrapi_phpFlickr();
  if (!$flickr) {
    drupal_set_message(t("Unable to query flickr.com, library is missing."), 'error');
    return FALSE;
  }
  return $flickr->photos_geo_getLocation($photo_id);
}


/**
 * Page call back
 */
function flickrgeo_timeline() {
  drupal_set_html_head('<script src="http://maps.google.com/maps?file=api&v=2&key='. variable_get('googlemap_api_key', '') .'" type="text/javascript"></script>');
  drupal_set_html_head('<script src="http://static.simile.mit.edu/timeline/api/timeline-api.js" type="text/javascript"></script>');
  $timemapjs = drupal_get_path('module', 'dnzrippr') .'/js/timemap_full.pack.js';
  drupal_set_html_head('<script src="'. $timemapjs .'" type="text/javascript"></script>');
  drupal_set_html_head('<link href="http://timemap.googlecode.com/svn/trunk/examples/examples.css" type="text/css" rel="stylesheet"/>');


  $output .= '
      <style>
    div#timelinecontainer{ height: 300px; }
    div#mapcontainer{ height: 500px; }
    </style>
    <div id="timemap">
      <div id="timelinecontainer">
        <div id="timeline"></div>
      </div>
      <div id="mapcontainer">
        <div id="map"></div>
      </div>
    </div>';
    $output .= '<script>$(document).ready(function() { timemapLoad() });</script>';


  $js = <<< STR

<script type="text/javascript">
function timemapLoad() {
    tm = TimeMap.init({
        mapId: "map",               // Id of map div element (required)
        timelineId: "timeline",     // Id of timeline div element (required)
        options: {
            eventIconPath: "../images/"
        },
        datasets: [
            {
                id: "artists",
                title: "Artists",
                theme: "orange",
                // note that the lines below are now the preferred syntax
                type: "basic",
                options: {
                    items: [
STR;

   for($i=1800; $i<=2020; $i+=10) {
     $start = strtotime("$i-01-01");
     $end = $start+(60*60*24*256*10);
//      drupal_seT_message("$start to $end");
     $result = db_query("SELECT *  FROM {dnznodes} d INNER JOIN {node} n ON d.nid = n.nid WHERE date <> '' AND date::bigint > %d AND date::bigint < %d ORDER BY geocoords DESC LIMIT 100", $start, $end);
      while($node = db_fetch_object($result)) {
        $js .= dnzrippr_timemap_json($node);
      }
   }


$js .= <<< STR
                    ]
                }
            }
        ],
        bandIntervals: [
            Timeline.DateTime.YEAR,
            Timeline.DateTime.DECADE
        ]
    });
}
    // manipulate the timemap further here if you like</script>
STR;
  drupal_set_html_head($js);


  return $output;
}