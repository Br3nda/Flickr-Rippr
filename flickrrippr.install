<?php
// $Id: flickrrippr.install,v 1.21.2.4 2010/09/13 03:10:00 taniwha Exp $
/**
 * @file DB stuff for Flickr Rippr
 */


/**
 * Implementation of hook_install().
 */
function flickrrippr_install() {
  drupal_install_schema('flickrrippr');
}

/**
 * Implementation of hook_uninstall().
 */

function flickrrippr_uninstall() {
  drupal_uninstall_schema('flickrrippr');
}

/**
 * Implementation of hook_schema().
 */
function flickrrippr_schema() {
  $schema['flickrusers'] = array(
    'fields' => array(
      'uid' => array('type' => 'int'),
      'flickrid' => array('type' => 'text'),
      'cachejpegs' => array('type' => 'int', 'size' => 'tiny'), //can has boolean? :-(
      'tag' => array('type' => 'text'),
      'flickrusername' => array('type' => 'text', 'not null' => TRUE),
      'flickrispro' => array('type' => 'int', 'size' => 'tiny', 'default' => 0),
      'flickrphotosurl' => array('type' => 'text'),
      'flickrprofileurl' => array('type' => 'text'),
      'flickravatar' => array('type' => 'text'),
      ),
    'primary key' => array('uid', 'flickrid')
);
  $schema['flickrphotos'] = array(
    'fields' => array(
      'flickrphoto_id' => array('type' => 'int', 'size' => 'big'),
      'nid' => array('type' => 'int', 'not null' => TRUE),
      'lastfetched' => array('type' => 'int', 'not null' => TRUE), //can has timestamp? :-(
      'photo_path' => array('type' => 'text'),
      'thumbnail_path' => array('type' => 'text'),
      'description' => array('type' => 'text'),
      'page_url' => array('type' => 'text'),
      'failed' => array('type' => 'int', 'default' => 0),
      'image_nid' => array('type' => 'int'),
      ),
      'primary key' => array('flickrphoto_id'),
    );
  return $schema;
}



function flickrrippr_update_5() {
  $ret[] = update_sql("CREATE TABLE {flickrcomments} (
  cid integer REFERENCES {comments} (cid),
  flickrcomment_id text UNIQUE,
  author text NOT NULL,
  authorname text NOT NULL,
  datecreate integer NOT NULL,
  permalink text,
  content text,
 PRIMARY KEY (cid)
)");
return $ret;
}

/**
 Flickr's id > an integer hold
*/
function flickrrippr_update_6() {
  $ret[] = update_sql("BEGIN");
  $ret[] = update_sql("ALTER TABLE {flickrphotos} RENAME flickrphoto_id TO oldflickrphoto_id");
  $ret[] = update_sql("ALTER TABLE {flickrphotos} ADD COLUMN flickrphoto_id text");
  $ret[] = update_sql("UPDATE {flickrphotos} SET flickrphoto_id = oldflickrphoto_id::text");
  $ret[] = update_sql("ALTER TABLE {flickrphotos} DROP COLUMN oldflickrphoto_id");
  $ret[] = update_sql("COMMIT");
  return $ret;
}

function flickrrippr_update_7() {
  $ret[] = update_sql("ALTER TABLE {flickrusers} ADD COLUMN flickrid text");
  db_add_column($ret, 'flickrphotos', 'photo_path', 'text');
  db_add_column($ret, 'flickrphotos', 'thumbnail_path', 'text');
  
  
  return $ret;
}
function flickrrippr_update_8() {
  db_add_column($ret, 'flickrphotos', 'description', 'text');
  db_add_column($ret, 'flickrphotos', 'page_url', 'text');
  return $ret;
}

function flickrrippr_update_9() {
  db_add_column($ret, 'flickrusers', 'tag', 'text');
  return $ret;
}

function flickrrippr_update_20() {
  db_add_column($ret, 'flickrphotos', 'failed', 'int');
  $ret[] = update_sql("UPDATE {flickrphotos} SET failed=0");
  return $ret;
}

function flickrrippr_update_30() {
  db_add_column($ret, 'flickrphotos', 'image_nid', 'int');
  return $ret;
}

function flickrrippr_update_40() {
  db_drop_primary_key($ret, 'flickrusers');
  db_add_primary_key($ret, 'flickrusers', array('uid', 'flickrid'));
  return $ret;
}

function flickrrippr_update_50() {
  db_add_column($ret, 'flickrusers', 'flickrispro', 'int');
  db_add_column($ret, 'flickrusers', 'flickrphotosurl', 'text');
  db_add_column($ret, 'flickrusers', 'flickrprofileurl', 'text');
  db_add_column($ret, 'flickrusers', 'flickravatar', 'text');
  return $ret;
}